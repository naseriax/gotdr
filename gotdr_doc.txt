package main // import "naseredin.aramnejad"

Author: Naseredin Aramnejad naseredin.aramnejad@gmail.com This script is
designed to extract all the possible information from the given sor file.
each sor file (Provided by OTDR Equipment) contains multiple data blocks and
since it's a binary file, it should be red per byte.

Formulas and blueprint of this script are inspired by the information
provided by: Sidney Li
http://morethanfootnotes.blogspot.com/2015/07/the-OTDR-optical-time-domain.html

CONSTANTS

const lightSpeed = 299.79181901 // m/Âµsec
    lightSpeed is the speed of light in a vaccuum to be used for refractive
    index and fiber length calculation.


FUNCTIONS

func BellCoreVersion(hexData, charString string) float32
    BellCoreVersion reads the bellcore version from the sor file and returns it.

func FiberLength(hexData, charString string, fixParams FixInfo) float32
    FiberLength calculates the fiber length and returns it.

func HexParser(hexData string) int64
    HexParser calls the Reverse() funcition to reverse the order of the provided
    HexString and then converts it's value to int64.

func JSONExport(data OTDRData)
func ReadSorFile(filename string) (string, string)
    ReadSorFile function opens the sor file and returns a hex string (hexData)
    and a text string (charString) from the file to the main function, Basically
    reading the whole file and putting it in RAM.

func Reverse(s string) string
    Reverse will reverse the hex string in every 2 bytes. Example: 0ABCD123 =>
    23D1BC0A.

func TotalLoss(hexData, charString string) float32
    TotalLoss reads the total loss of the fiber from the sor file and returns
    it.

func errDealer(err error)
    errDealer will handle the errors.

func main()

TYPES

type FixInfo struct {
	DateTime       time.Time
	Unit           string
	ActualWL       float32 `json:"Actual Wavelength"`
	PulseWidthNo   int64   `json:"Pulse Width No"`
	PulseWidth     int64   `json:"Pulse Width(ns)"`
	SampleQTY      int64   `json:"Sample Quantity"`
	IOR            int64
	RefIndex       float32 `json:"Refraction Index"`
	FiberSpeed     float32 `json:"Fiber Light Speed"`
	Resolution     float32 `json:"Scan Resolution"`
	Backscattering float32 `json:"Back-Scattering"`
	Averaging      int64
	AveragingTime  float32 `json:"Averaging Time"`
	Range          float32 `json:"Scan Range"`
}
    FixInfos struct is the Fixed parameters extracted from the sor file.

func FixedParams(hexData, charString string) FixInfo
    FixedParams function extracts the Fixed Parameters from the sor file and
    stores it in FixInfos struct.

type GenParam struct {
	CableID        string `json:"Cable Id"`
	FiberID        string `json:"Fiber Id"`
	LocationA      string
	LocationB      string
	BuildCondition string `json:"Build Condition"`
	Comment        string
	CableCode      string `json:"Cable Code"`
	Operator       string
	FiberType      string `json:"Fiber Type"`
	OTDRWavelength string `json:"OTDR Wavelength"`
}
    GenParams is the General Parameters extracted from the sor file.

func GenParams(charString string) GenParam
    GenParams function extracts the General Parameters from the sor file and
    stores it in GenParam struct.

type OTDRData struct {
	Supplier        SupParam
	GenInfo         GenParam `json:"General Information"`
	Events          []OTDREvent
	FixInfo         FixInfo `json:"Fixed Parameters"`
	FiberLength     float32 `json:"Fiber Length(km)"`
	BellCoreVersion float32 `json:"Bellcore Version"`
	TotalLoss       float32 `json:"Total Fiber Loss(dB)"`
	AvgLoss         float32 `json:"Average Loss per Km(dB)"`
}
    OTDRData is the struct wrapping all the extracted information and will be
    exported as JSON.

type OTDREvent struct {
	EventType          string  `json:"Event Type"`
	EventLocM          float32 `json:"Event Point(m)"`
	EventNumber        int     `json:"Event Number"`
	Slope              float32 `json:"Slope(dB)"`
	SpliceLoss         float32 `json:"Splice Loss(dB)"`
	RefLoss            float32 `json:"Reflection Loss(dB)"`
	EndOfPreviousEvent int     `json:"Previous Event-End"`
	BegOfCurrentEvent  int     `json:"Current Event-Start"`
	EndOfCurrentEvent  int     `json:"Current Event-End"`
	BegOfNextEvent     int     `json:"Next Event-Start"`
	PeakCurrentEvent   int     `json:"Peak point"`
}
    OTDREvent is the event information extracted from the sor file.

func KeyEvents(hexData string, charString string, fiberSpeed float32, resolution float32) []OTDREvent
    KeyEvents function extracts the events information from the sor file and
    stores it in OTDREvent struct.

type SupParam struct {
	OTDRSupplier   string `json:"OTDR Supplier"`
	OTDRName       string `json:"OTDR Name"`
	OTDRsn         string `json:"OTDR SN"`
	OTDRModuleName string `json:"OTDR Module Name"`
	OTDRModuleSN   string `json:"OTDR Module SN"`
	OTDRswVersion  string `json:"OTDR SW Version"`
	OTDROtherInfo  string `json:"OTDR Other Info"`
}
    SupParam is the Supplier Parameters extracted from the sor file.

func SupParams(charString string) SupParam
    SupParams function extracts the Supplier Parameters from the sor file and
    stores it in SupParam struct.

